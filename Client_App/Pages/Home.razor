@page "/"

@using Client_App.Components.Home
@using Client_App.Domains.Categories.Responses
@using Client_App.Domains.Products.Responses
@using Client_App.Interfaces
@using Client_App.Components.Share
@using Client_App.Domains.Share


<Slider/>

<Discover Categories="Categories"/>

<ScienceBaked/>

@if (Products is not null)
{
    <BestSeller Products="Products.Data"/>
}
else
{
    <Loading/>
}

<Feature/>

<Collection Categories="Categories"/>

<Location/>

@code {
    public Pagination<ProductsInList>? Products { get; set; }
    public List<Category> Categories = [];
    [Inject] public ICategoryService CategoryService { get; set; } = null!;
    [Inject] public IProductService ProductService { get; set; } = null!;

    private readonly List<string> _excludedCategories = ["best-sellers", "all"];

    protected override async Task OnInitializedAsync()
    {
        Products = await ProductService.GetProductsByConditionAsync<ProductsInList>(0, default, true, 8);

        Categories = (await CategoryService.GetAllAsync<Category>()).Data.Where(c => !_excludedCategories.Contains(c.Endpoint)).ToList();
        StateHasChanged();
    }

}