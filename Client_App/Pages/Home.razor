@page "/"

@using Client_App.Components.Home
@using Client_App.Interfaces
@using Client_App.Components.Share
@using Client_App.DTOs.Categories.Responses
@using Client_App.DTOs.Products.Responses
@using Client_App.DTOs.Share
@using Client_App.Services
@using Client_App.Services.Share

@inject ErrorService ErrorService;
@inject TitleService TitleService;


<Slider/>

<Discover Categories="Categories"/>

<ScienceBaked/>

@if (Products is not null)
{
    <BestSeller Products="Products.Data"/>
}
else
{
    <Loading/>
}

<Feature/>

<Collection Categories="Categories"/>

<Location/>

@code {
    public Pagination<ProductsInList>? Products { get; set; }
    public List<Category> Categories = [];
    [Inject] public ICategoryService CategoryService { get; set; } = null!;
    [Inject] public IProductService ProductService { get; set; } = null!;

    protected override async Task OnInitializedAsync()
    {
        await TitleService.SetTitleAsync("Adopt love, adopt a pet");

        var productResult = await ProductService.GetProductsByConditionAsync<ProductsInList>(0, default, true, 8);

        if (!productResult.IsFailure)
        {
            Products = productResult.Value;
        }
        else
        {
            ErrorService.SetErrorMessage(productResult.ErrorTypes).NavigateTo();
            return;
        }

        var categoryResult = await CategoryService.GetAllAsync<Category>(4);

        if (!categoryResult.IsFailure)
        {
            Categories = categoryResult.Value.Data;
        }
        else
        {
            ErrorService.SetErrorMessage(categoryResult.ErrorTypes).NavigateTo();
        }

        StateHasChanged();
    }

}