@page "/"

@using BasedDomain
@using Client_App.Components.Home
@using Client_App.Domains.Categories.Responses
@using Client_App.Domains.Products.Responses
@using Client_App.Interfaces


<Slider/>

<Discover Categories="Categories"/>

<ScienceBaked/>

<BestSeller Products="Products.Data"/>

@* Customer Stories  (later) *@

<Feature/>

<Collection Categories="Categories"/>

@code {
    public Pagination<ProductsInList> Products { get; set; } = null!;
    public List<CategoriesInList> Categories = [];
    [Inject] public ICategoryService<CategoriesInList, CategoryById> CategoryService { get; set; } = null!;
    [Inject] public IProductService<ProductsInList, ProductById> ProductService { get; set; } = null!;

    private readonly List<string> _excludedCategories = ["best-sellers", "all"];

    protected override async Task OnInitializedAsync()
    {
        Products = await ProductService.GetProductsByConditionAsync(0, null, true, 4);

        Categories = (await CategoryService.GetAllAsync()).Data.Where(c => !_excludedCategories.Contains(c.Endpoint)).ToList();
        StateHasChanged();
    }

}