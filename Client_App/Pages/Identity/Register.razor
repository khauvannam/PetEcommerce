@page "/Register"
@using Client_App.DTOs.Identities.Requests
@using Client_App.Interfaces
@using Client_App.Services.Share
@using Client_App.Components.Share.CustomInputs

@inject IIdentityService IdentityService;
@inject ErrorService ErrorService;
@inject NavigationManager NavigationManager;

<div class=" w-full flex justify-center text-main">
    <div class="flex w-full">
        <div class="w-1/2 flex">
            <div class="w-full h-[100vh] bg-cover bg-center"
                 style="background-image: url('./images/identity/login.jpg')">
            </div>
        </div>
        <div class="bg-white p-8 w-1/2 rounded-lg pt-[10%] px-[5%]">
            <h1 class=" text-4xl font-bold mb-6 text-center font-heading_bold">Register An Account</h1>

            <EditForm Model="RegisterModel" OnValidSubmit="HandleValidSubmit">
                <DataAnnotationsValidator/>

                <div class="flex justify-between">
                    <CustomInputText @bind-Value="@FirstName" PlaceHolder="First Name"
                                     Model="@RegisterModel"
                                     ClassCss="form-control mt-1 block w-[48%] px-6 py-4 border border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 sm:text-sm"
                                     PropertyName="@nameof(RegisterModel.Username)"
                                     OnChange="HandleUsernameInput"/>

                    <CustomInputText @bind-Value="@LastName" PlaceHolder="Last Name"
                                     Model="RegisterModel"
                                     ClassCss="form-control mt-1 block w-[48%] px-6 py-4 border border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 sm:text-sm"
                                     PropertyName="@nameof(RegisterModel.Username)"
                                     OnChange="HandleUsernameInput"/>
                </div>

                <div class="text-red-500 mb-4">
                    <ValidationMessage For="() => RegisterModel.Username"/>
                </div>
                <!-- Phone Number -->
                <div class="mb-4">
                    <InputText
                        @bind-Value="RegisterModel!.PhoneNumber"
                        type="text"
                        placeholder="Phone Number"
                        class="form-control mt-1 block w-full px-6 py-4 border border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 sm:text-sm"
                        required/>

                    <ValidationMessage class="text-red-500" For="@(() => RegisterModel.PhoneNumber)"/>
                </div>

                <!-- Email -->
                <div class="mb-4">
                    <InputText
                        @bind-Value="RegisterModel.Email"
                        type="email"
                        placeholder="Email"
                        class="form-control mt-1 block w-full px-6 py-4 border border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 sm:text-sm"
                        required/>
                    <ValidationMessage class="text-red-500" For="@(() => RegisterModel.Email)"/>
                </div>

                <!-- Password -->
                <div class="mb-4">
                    <InputText
                        @bind-Value="RegisterModel.Password"
                        type="password"
                        placeholder="Password"
                        class="form-control mt-1 block w-full px-6 py-4 border border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 sm:text-sm"
                        required/>
                    <ValidationMessage class="text-red-500" For="@(() => RegisterModel.Password)"/>
                </div>
                <div>
                    <button type="submit"
                            class="w-full inline-flex justify-center py-2 px-4 border border-transparent shadow-sm font-medium rounded-sm text-white bg-[#00205c] focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 text-xl transition-all ease-out">
                        Register
                    </button>
                </div>
            </EditForm>

            <div class="w-full flex justify-between mt-3  ">
                <button class="hover:underline" type="button">
                    <NavLink href="/login">
                        Already Have An Account?
                    </NavLink>
                </button>
                <button class="hover:underline " type="submit">
                    <a href="">
                        Forgot Password?
                    </a>
                </button>
            </div>
        </div>
    </div>
</div>

@code {

    [SupplyParameterFromForm] private RegisterFormModel? RegisterModel { get; set; }

    private string FirstName { get; set; } = string.Empty;

    private string LastName { get; set; } = string.Empty;


    protected override void OnInitialized()
    {
        RegisterModel ??= RegisterFormModel.Empty;
    }

    private void HandleUsernameInput()
    {
        RegisterModel!.Username = $"{FirstName}{LastName}".Replace(" ", "").ToLower();
        Console.WriteLine(RegisterModel.Username);
    }

    private async Task HandleValidSubmit()
    {
        var result = await IdentityService.Register(RegisterModel!);

        if (result.IsFailure)
        {
            ErrorService.SetErrorMessage(result.ErrorTypes).NavigateTo(default);
            return;
        }

        NavigationManager.NavigateTo("/login");
    }

}