@page "/Login"
@using Client_App.DTOs.Identities.Requests
@using Client_App.Interfaces
@using Client_App.Services.Share

@inject IIdentityService IdentityService;
@inject ErrorService ErrorService;
@inject NavigationManager NavigationManager;

<div class=" w-full flex justify-center text-main  ">
    <div class="flex w-full">
        <div class="w-1/2 flex">
            <div class="w-full h-[100vh] bg-cover bg-center"
                 style="background-image: url('./images/identity/login.jpg')">
            </div>
        </div>
        <div class="bg-white p-8 w-1/2 rounded-lg pt-[10%] px-[5%]">
            <h1 class=" text-4xl font-bold mb-6 text-center font-heading_bold">Welcome Back!</h1>
            <EditForm Model="LoginModel" OnValidSubmit="HandleValidSubmit">
                <DataAnnotationsValidator/>

                <div class="mb-4">
 
                    <InputText
                        @bind-Value="LoginModel.Email"
                        type="email"
                        placeholder="Email"
                        class="form-control mt-1 block w-full px-6 py-4 border border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 sm:text-sm"/>

                    <ValidationMessage class="text-red-500" For="@(() => LoginModel.Email)"/>
                </div>

                <div class="mb-4">
                    
                    <InputText
                        @bind-Value="LoginModel.Password"
                        type="password"
                        placeholder="Password"
                        class="form-control mt-1 block w-full px-6 py-4 border border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 sm:text-sm"/>
                    
                    <ValidationMessage class="text-red-500" For="@(() => LoginModel.Password)"/>
                </div>

                <div>
                    <button type="submit"
                            class="w-full inline-flex justify-center py-2 px-4 border border-transparent shadow-sm font-medium rounded-sm text-white bg-[#00205c] focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 text-xl transition-all ease-out">
                        Login
                    </button>
                </div>
            </EditForm>
            <div class="w-full flex justify-between mt-3  ">
                <button class="hover:underline" type="button">

                    <NavLink href="/register">
                        Create an Account
                    </NavLink>
                </button>
                <button class="hover:underline " type="submit">
                    <a href="">
                        Forgot Password?
                    </a>
                </button>
            </div>
        </div>
    </div>
</div>

@code {
    private LoginFormModel LoginModel { get; } = LoginFormModel.Empty;

    private async Task HandleValidSubmit()
    {
        var result = await IdentityService.Login(LoginModel);
        
        if (result.IsFailure)
        {
            ErrorService.SetErrorMessage(result.ErrorTypes).NavigateTo(default);
        }
        
        NavigationManager.NavigateTo("/");
    }

}